<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SUVORK5CYII=
</value>
  </data>
</root>